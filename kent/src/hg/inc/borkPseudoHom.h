/* borkPseudoHom.h was originally generated by the autoSql program, which also 
 * generated borkPseudoHom.c and borkPseudoHom.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2002 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef BORKPSEUDOHOM_H
#define BORKPSEUDOHOM_H

struct borkPseudoHom
/* stats and protein homologies behind Bork pseudogenes */
    {
    struct borkPseudoHom *next;  /* Next in singly linked list. */
    char *name;	/* Bork pseudogene gene name */
    char *protRef;	/* String with swissprot or trembl reference  */
    char *description;	/* Freeform (except for no tabs) description */
    };

void borkPseudoHomStaticLoad(char **row, struct borkPseudoHom *ret);
/* Load a row from borkPseudoHom table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct borkPseudoHom *borkPseudoHomLoad(char **row);
/* Load a borkPseudoHom from row fetched with select * from borkPseudoHom
 * from database.  Dispose of this with borkPseudoHomFree(). */

struct borkPseudoHom *borkPseudoHomLoadAll(char *fileName);
/* Load all borkPseudoHom from a tab-separated file.
 * Dispose of this with borkPseudoHomFreeList(). */

struct borkPseudoHom *borkPseudoHomLoadWhere(struct sqlConnection *conn, char *table, char *where);
/* Load all borkPseudoHom from table that satisfy where clause. The
 * where clause may be NULL in which case whole table is loaded
 * Dispose of this with borkPseudoHomFreeList(). */

struct borkPseudoHom *borkPseudoHomCommaIn(char **pS, struct borkPseudoHom *ret);
/* Create a borkPseudoHom out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new borkPseudoHom */

void borkPseudoHomFree(struct borkPseudoHom **pEl);
/* Free a single dynamically allocated borkPseudoHom such as created
 * with borkPseudoHomLoad(). */

void borkPseudoHomFreeList(struct borkPseudoHom **pList);
/* Free a list of dynamically allocated borkPseudoHom's */

void borkPseudoHomOutput(struct borkPseudoHom *el, FILE *f, char sep, char lastSep);
/* Print out borkPseudoHom.  Separate fields with sep. Follow last field with lastSep. */

#define borkPseudoHomTabOut(el,f) borkPseudoHomOutput(el,f,'\t','\n');
/* Print out borkPseudoHom as a line in a tab-separated file. */

#define borkPseudoHomCommaOut(el,f) borkPseudoHomOutput(el,f,',',',');
/* Print out borkPseudoHom as a comma separated list including final comma. */

#endif /* BORKPSEUDOHOM_H */

