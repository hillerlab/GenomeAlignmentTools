/* celeraDupPositive.h was originally generated by the autoSql program, which also
 * generated celeraDupPositive.c and celeraDupPositive.sql.  This header links the database and the RAM
 * representation of objects. */
 /*YEAH WHATEVER. Rockie*/

/* Copyright (C) 2002 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef CELERADUPPOSITIVE_H
#define CELERADUPPOSITIVE_H

struct celeraDupPositive
/* Summary of Celera large genomic Duplications (>1KB >90% similar) */
    {
    struct celeraDupPositive *next;  /* Next in singly linked list. */
    char *chrom;	/* Human chromosome */
    unsigned chromStart;	/* Start position in chromosome */
    unsigned chromEnd;	/* End position in chromosome */
    char *name;	/* Other FPC contig involved NEED BETTER DESCRIPTION*/
    char *fullName;/* Other FPC contig involved NEED BETTER DESCRIPTION*/
    float fracMatch;	/* fraction of matching bases */
    float bpAlign;	/* K-value calculated with Jukes-Cantor */
    };

void celeraDupPositiveStaticLoad(char **row, struct celeraDupPositive *ret);
/* Load a row from celeraDupPositive table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct celeraDupPositive *celeraDupPositiveLoad(char **row);
/* Load a celeraDupPositive from row fetched with select * from celeraDupPositive
 * from database.  Dispose of this with celeraDupPositiveFree(). */

struct celeraDupPositive *celeraDupPositiveCommaIn(char **pS, struct celeraDupPositive *ret);
/* Create a celeraDupPositive out of a comma separated string.
 * This will fill in ret if non-null, otherwise will
 * return a new celeraDupPositive */

void celeraDupPositiveFree(struct celeraDupPositive **pEl);
/* Free a single dynamically allocated celeraDupPositive such as created
 * with celeraDupPositiveLoad(). */

void celeraDupPositiveFreeList(struct celeraDupPositive **pList);
/* Free a list of dynamically allocated celeraDupPositive's */

void celeraDupPositiveOutput(struct celeraDupPositive *el, FILE *f, char sep, char lastSep);
/* Print out celeraDupPositive.  Separate fields with sep. Follow last field with lastSep. */

#define celeraDupPositiveTabOut(el,f) celeraDupPositiveOutput(el,f,'\t','\n');
/* Print out celeraDupPositive as a line in a tab-separated file. */

#define celeraDupPositiveCommaOut(el,f) celeraDupPositiveOutput(el,f,',',',');
/* Print out celeraDupPositive as a comma separated list including final comma. */

#endif /* celeraDupPositive_H */

