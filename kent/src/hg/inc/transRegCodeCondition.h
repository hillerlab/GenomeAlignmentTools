/* transRegCodeCondition.h was originally generated by the autoSql program, which also 
 * generated transRegCodeCondition.c and transRegCodeCondition.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2004 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef TRANSREGCODECONDITION_H
#define TRANSREGCODECONDITION_H

#define TRANSREGCODECONDITION_NUM_COLS 2

struct transRegCodeCondition
/* Growth condition associated with a transcription factor */
    {
    struct transRegCodeCondition *next;  /* Next in singly linked list. */
    char *name;	/* Name of transcription factor */
    char *growthCondition;	/* Growth condition seen in */
    };

void transRegCodeConditionStaticLoad(char **row, struct transRegCodeCondition *ret);
/* Load a row from transRegCodeCondition table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct transRegCodeCondition *transRegCodeConditionLoad(char **row);
/* Load a transRegCodeCondition from row fetched with select * from transRegCodeCondition
 * from database.  Dispose of this with transRegCodeConditionFree(). */

struct transRegCodeCondition *transRegCodeConditionLoadAll(char *fileName);
/* Load all transRegCodeCondition from whitespace-separated file.
 * Dispose of this with transRegCodeConditionFreeList(). */

struct transRegCodeCondition *transRegCodeConditionLoadAllByChar(char *fileName, char chopper);
/* Load all transRegCodeCondition from chopper separated file.
 * Dispose of this with transRegCodeConditionFreeList(). */

#define transRegCodeConditionLoadAllByTab(a) transRegCodeConditionLoadAllByChar(a, '\t');
/* Load all transRegCodeCondition from tab separated file.
 * Dispose of this with transRegCodeConditionFreeList(). */

struct transRegCodeCondition *transRegCodeConditionCommaIn(char **pS, struct transRegCodeCondition *ret);
/* Create a transRegCodeCondition out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new transRegCodeCondition */

void transRegCodeConditionFree(struct transRegCodeCondition **pEl);
/* Free a single dynamically allocated transRegCodeCondition such as created
 * with transRegCodeConditionLoad(). */

void transRegCodeConditionFreeList(struct transRegCodeCondition **pList);
/* Free a list of dynamically allocated transRegCodeCondition's */

void transRegCodeConditionOutput(struct transRegCodeCondition *el, FILE *f, char sep, char lastSep);
/* Print out transRegCodeCondition.  Separate fields with sep. Follow last field with lastSep. */

#define transRegCodeConditionTabOut(el,f) transRegCodeConditionOutput(el,f,'\t','\n');
/* Print out transRegCodeCondition as a line in a tab-separated file. */

#define transRegCodeConditionCommaOut(el,f) transRegCodeConditionOutput(el,f,',',',');
/* Print out transRegCodeCondition as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* TRANSREGCODECONDITION_H */

