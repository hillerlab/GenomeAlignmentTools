/* acemblyClass.h was originally generated by the autoSql program, which also 
 * generated acemblyClass.c and acemblyClass.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2005 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef ACEMBLYCLASS_H
#define ACEMBLYCLASS_H

#define ACEMBLYCLASS_NUM_COLS 2

struct acemblyClass
/* Class for Acembly genes */
    {
    struct acemblyClass *next;  /* Next in singly linked list. */
    char *name;	/* Transcript ID for Acembly gene */
    char *class;	/* Class of gene */
    };

void acemblyClassStaticLoad(char **row, struct acemblyClass *ret);
/* Load a row from acemblyClass table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct acemblyClass *acemblyClassLoad(char **row);
/* Load a acemblyClass from row fetched with select * from acemblyClass
 * from database.  Dispose of this with acemblyClassFree(). */

struct acemblyClass *acemblyClassLoadAll(char *fileName);
/* Load all acemblyClass from whitespace-separated file.
 * Dispose of this with acemblyClassFreeList(). */

struct acemblyClass *acemblyClassLoadAllByChar(char *fileName, char chopper);
/* Load all acemblyClass from chopper separated file.
 * Dispose of this with acemblyClassFreeList(). */

#define acemblyClassLoadAllByTab(a) acemblyClassLoadAllByChar(a, '\t');
/* Load all acemblyClass from tab separated file.
 * Dispose of this with acemblyClassFreeList(). */

struct acemblyClass *acemblyClassCommaIn(char **pS, struct acemblyClass *ret);
/* Create a acemblyClass out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new acemblyClass */

void acemblyClassFree(struct acemblyClass **pEl);
/* Free a single dynamically allocated acemblyClass such as created
 * with acemblyClassLoad(). */

void acemblyClassFreeList(struct acemblyClass **pList);
/* Free a list of dynamically allocated acemblyClass's */

void acemblyClassOutput(struct acemblyClass *el, FILE *f, char sep, char lastSep);
/* Print out acemblyClass.  Separate fields with sep. Follow last field with lastSep. */

#define acemblyClassTabOut(el,f) acemblyClassOutput(el,f,'\t','\n');
/* Print out acemblyClass as a line in a tab-separated file. */

#define acemblyClassCommaOut(el,f) acemblyClassOutput(el,f,',',',');
/* Print out acemblyClass as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* ACEMBLYCLASS_H */

