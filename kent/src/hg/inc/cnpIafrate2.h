/* cnpIafrate2.h was originally generated by the autoSql program, which also 
 * generated cnpIafrate2.c and cnpIafrate2.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2007 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef CNPIAFRATE2_H
#define CNPIAFRATE2_H

#define CNPIAFRATE2_NUM_COLS 10

struct cnpIafrate2
/* CNP data from Iafrate lab */
    {
    struct cnpIafrate2 *next;  /* Next in singly linked list. */
    char *chrom;	/* Reference sequence chromosome or scaffold */
    unsigned chromStart;	/* Start position in chrom */
    unsigned chromEnd;	/* End position in chrom */
    char *name;	/* BAC name */
    unsigned normalGain;	/* Number of normal individuals with gain */
    unsigned normalLoss;	/* Number of normal individuals with loss */
    unsigned patientGain;	/* Number of patients with gain */
    unsigned patientLoss;	/* Number of patients with loss */
    unsigned total;	/* Total gain and loss */
    char *cohortType;	/* {Control},{Patient},{Control and Patient} */
    };

void cnpIafrate2StaticLoad(char **row, struct cnpIafrate2 *ret);
/* Load a row from cnpIafrate2 table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct cnpIafrate2 *cnpIafrate2Load(char **row);
/* Load a cnpIafrate2 from row fetched with select * from cnpIafrate2
 * from database.  Dispose of this with cnpIafrate2Free(). */

struct cnpIafrate2 *cnpIafrate2LoadAll(char *fileName);
/* Load all cnpIafrate2 from whitespace-separated file.
 * Dispose of this with cnpIafrate2FreeList(). */

struct cnpIafrate2 *cnpIafrate2LoadAllByChar(char *fileName, char chopper);
/* Load all cnpIafrate2 from chopper separated file.
 * Dispose of this with cnpIafrate2FreeList(). */

#define cnpIafrate2LoadAllByTab(a) cnpIafrate2LoadAllByChar(a, '\t');
/* Load all cnpIafrate2 from tab separated file.
 * Dispose of this with cnpIafrate2FreeList(). */

struct cnpIafrate2 *cnpIafrate2CommaIn(char **pS, struct cnpIafrate2 *ret);
/* Create a cnpIafrate2 out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new cnpIafrate2 */

void cnpIafrate2Free(struct cnpIafrate2 **pEl);
/* Free a single dynamically allocated cnpIafrate2 such as created
 * with cnpIafrate2Load(). */

void cnpIafrate2FreeList(struct cnpIafrate2 **pList);
/* Free a list of dynamically allocated cnpIafrate2's */

void cnpIafrate2Output(struct cnpIafrate2 *el, FILE *f, char sep, char lastSep);
/* Print out cnpIafrate2.  Separate fields with sep. Follow last field with lastSep. */

#define cnpIafrate2TabOut(el,f) cnpIafrate2Output(el,f,'\t','\n');
/* Print out cnpIafrate2 as a line in a tab-separated file. */

#define cnpIafrate2CommaOut(el,f) cnpIafrate2Output(el,f,',',',');
/* Print out cnpIafrate2 as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* CNPIAFRATE2_H */

