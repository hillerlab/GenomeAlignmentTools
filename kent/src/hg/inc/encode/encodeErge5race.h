/* encodeErge5race.h was originally generated by the autoSql program, which also 
 * generated encodeErge5race.c and encodeErge5race.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2008 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef ENCODEERGE5RACE_H
#define ENCODEERGE5RACE_H

#define ENCODEERGE5RACE_NUM_COLS 14

struct encodeErge5race
/* ENCODE experimental data from dbERGEII */
    {
    struct encodeErge5race *next;  /* Next in singly linked list. */
    char *chrom;	/* Human chromosome */
    unsigned chromStart;	/* Start position in chromosome */
    unsigned chromEnd;	/* End position in chromosome */
    char *name;	/* Name of read - up to 255 characters */
    unsigned score;	/* Score from 0-1000.  1000 is best */
    char strand[2];	/* Value should be + or - */
    unsigned thickStart;	/* Start of where display should be thick (start codon) */
    unsigned thickEnd;	/* End of where display should be thick (stop codon) */
    unsigned reserved;	/* Always zero for now */
    unsigned blockCount;	/* Number of separate blocks (regions without gaps) */
    unsigned *blockSizes;	/* Comma separated list of block sizes */
    unsigned *chromStarts;	/* Start position of each block in relative to chromStart */
    char *Id;	/* dbERGEII Id */
    char *color;	/* RGB color values */
    };

struct encodeErge5race *encodeErge5raceLoad(char **row);
/* Load a encodeErge5race from row fetched with select * from encodeErge5race
 * from database.  Dispose of this with encodeErge5raceFree(). */

struct encodeErge5race *encodeErge5raceLoadAll(char *fileName);
/* Load all encodeErge5race from whitespace-separated file.
 * Dispose of this with encodeErge5raceFreeList(). */

struct encodeErge5race *encodeErge5raceLoadAllByChar(char *fileName, char chopper);
/* Load all encodeErge5race from chopper separated file.
 * Dispose of this with encodeErge5raceFreeList(). */

#define encodeErge5raceLoadAllByTab(a) encodeErge5raceLoadAllByChar(a, '\t');
/* Load all encodeErge5race from tab separated file.
 * Dispose of this with encodeErge5raceFreeList(). */

struct encodeErge5race *encodeErge5raceCommaIn(char **pS, struct encodeErge5race *ret);
/* Create a encodeErge5race out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new encodeErge5race */

void encodeErge5raceFree(struct encodeErge5race **pEl);
/* Free a single dynamically allocated encodeErge5race such as created
 * with encodeErge5raceLoad(). */

void encodeErge5raceFreeList(struct encodeErge5race **pList);
/* Free a list of dynamically allocated encodeErge5race's */

void encodeErge5raceOutput(struct encodeErge5race *el, FILE *f, char sep, char lastSep);
/* Print out encodeErge5race.  Separate fields with sep. Follow last field with lastSep. */

#define encodeErge5raceTabOut(el,f) encodeErge5raceOutput(el,f,'\t','\n');
/* Print out encodeErge5race as a line in a tab-separated file. */

#define encodeErge5raceCommaOut(el,f) encodeErge5raceOutput(el,f,',',',');
/* Print out encodeErge5race as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* ENCODEERGE5RACE_H */

