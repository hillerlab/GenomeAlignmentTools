/* wgEncodeGencodeUniProt.h was originally generated by the autoSql program, which also 
 * generated wgEncodeGencodeUniProt.c and wgEncodeGencodeUniProt.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2011 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef WGENCODEGENCODEUNIPROT_H
#define WGENCODEGENCODEUNIPROT_H

#define WGENCODEGENCODEUNIPROT_NUM_COLS 4

enum wgEncodeGencodeUniProtDataset
    {
    wgEncodeGencodeUniProtSwissProt = 0,
    wgEncodeGencodeUniProtTrEMBL = 1,
    };
struct wgEncodeGencodeUniProt
/* GENCODE transcript to UniProt peptide mapping */
    {
    struct wgEncodeGencodeUniProt *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *acc;	/* UniProt/Swiss-Prot accession */
    char *name;	/* UniProt/Swiss-Prot entry name */
    enum wgEncodeGencodeUniProtDataset dataset;	/* UniProt dataset */
    };

void wgEncodeGencodeUniProtStaticLoad(char **row, struct wgEncodeGencodeUniProt *ret);
/* Load a row from wgEncodeGencodeUniProt table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoad(char **row);
/* Load a wgEncodeGencodeUniProt from row fetched with select * from wgEncodeGencodeUniProt
 * from database.  Dispose of this with wgEncodeGencodeUniProtFree(). */

struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoadAll(char *fileName);
/* Load all wgEncodeGencodeUniProt from whitespace-separated file.
 * Dispose of this with wgEncodeGencodeUniProtFreeList(). */

struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoadAllByChar(char *fileName, char chopper);
/* Load all wgEncodeGencodeUniProt from chopper separated file.
 * Dispose of this with wgEncodeGencodeUniProtFreeList(). */

#define wgEncodeGencodeUniProtLoadAllByTab(a) wgEncodeGencodeUniProtLoadAllByChar(a, '\t');
/* Load all wgEncodeGencodeUniProt from tab separated file.
 * Dispose of this with wgEncodeGencodeUniProtFreeList(). */

struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtCommaIn(char **pS, struct wgEncodeGencodeUniProt *ret);
/* Create a wgEncodeGencodeUniProt out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new wgEncodeGencodeUniProt */

void wgEncodeGencodeUniProtFree(struct wgEncodeGencodeUniProt **pEl);
/* Free a single dynamically allocated wgEncodeGencodeUniProt such as created
 * with wgEncodeGencodeUniProtLoad(). */

void wgEncodeGencodeUniProtFreeList(struct wgEncodeGencodeUniProt **pList);
/* Free a list of dynamically allocated wgEncodeGencodeUniProt's */

void wgEncodeGencodeUniProtOutput(struct wgEncodeGencodeUniProt *el, FILE *f, char sep, char lastSep);
/* Print out wgEncodeGencodeUniProt.  Separate fields with sep. Follow last field with lastSep. */

#define wgEncodeGencodeUniProtTabOut(el,f) wgEncodeGencodeUniProtOutput(el,f,'\t','\n');
/* Print out wgEncodeGencodeUniProt as a line in a tab-separated file. */

#define wgEncodeGencodeUniProtCommaOut(el,f) wgEncodeGencodeUniProtOutput(el,f,',',',');
/* Print out wgEncodeGencodeUniProt as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* WGENCODEGENCODEUNIPROT_H */

