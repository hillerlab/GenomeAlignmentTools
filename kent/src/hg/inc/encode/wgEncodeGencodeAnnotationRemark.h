/* wgEncodeGencodeAnnotationRemark.h was originally generated by the autoSql program, which also 
 * generated wgEncodeGencodeAnnotationRemark.c and wgEncodeGencodeAnnotationRemark.sql.  This header links the database and
 * the RAM representation of objects. */

/* Copyright (C) 2011 The Regents of the University of California 
 * See README in this or parent directory for licensing information. */

#ifndef WGENCODEGENCODEANNOTATIONREMARK_H
#define WGENCODEGENCODEANNOTATIONREMARK_H

#define WGENCODEGENCODEANNOTATIONREMARK_NUM_COLS 2

struct wgEncodeGencodeAnnotationRemark
/* Annotation remarks */
    {
    struct wgEncodeGencodeAnnotationRemark *next;  /* Next in singly linked list. */
    char *transcriptId;	/* GENCODE transcript identifier */
    char *remark;	/* Comment by annotator */
    };

void wgEncodeGencodeAnnotationRemarkStaticLoad(char **row, struct wgEncodeGencodeAnnotationRemark *ret);
/* Load a row from wgEncodeGencodeAnnotationRemark table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct wgEncodeGencodeAnnotationRemark *wgEncodeGencodeAnnotationRemarkLoad(char **row);
/* Load a wgEncodeGencodeAnnotationRemark from row fetched with select * from wgEncodeGencodeAnnotationRemark
 * from database.  Dispose of this with wgEncodeGencodeAnnotationRemarkFree(). */

struct wgEncodeGencodeAnnotationRemark *wgEncodeGencodeAnnotationRemarkLoadAll(char *fileName);
/* Load all wgEncodeGencodeAnnotationRemark from whitespace-separated file.
 * Dispose of this with wgEncodeGencodeAnnotationRemarkFreeList(). */

struct wgEncodeGencodeAnnotationRemark *wgEncodeGencodeAnnotationRemarkLoadAllByChar(char *fileName, char chopper);
/* Load all wgEncodeGencodeAnnotationRemark from chopper separated file.
 * Dispose of this with wgEncodeGencodeAnnotationRemarkFreeList(). */

#define wgEncodeGencodeAnnotationRemarkLoadAllByTab(a) wgEncodeGencodeAnnotationRemarkLoadAllByChar(a, '\t');
/* Load all wgEncodeGencodeAnnotationRemark from tab separated file.
 * Dispose of this with wgEncodeGencodeAnnotationRemarkFreeList(). */

struct wgEncodeGencodeAnnotationRemark *wgEncodeGencodeAnnotationRemarkCommaIn(char **pS, struct wgEncodeGencodeAnnotationRemark *ret);
/* Create a wgEncodeGencodeAnnotationRemark out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new wgEncodeGencodeAnnotationRemark */

void wgEncodeGencodeAnnotationRemarkFree(struct wgEncodeGencodeAnnotationRemark **pEl);
/* Free a single dynamically allocated wgEncodeGencodeAnnotationRemark such as created
 * with wgEncodeGencodeAnnotationRemarkLoad(). */

void wgEncodeGencodeAnnotationRemarkFreeList(struct wgEncodeGencodeAnnotationRemark **pList);
/* Free a list of dynamically allocated wgEncodeGencodeAnnotationRemark's */

void wgEncodeGencodeAnnotationRemarkOutput(struct wgEncodeGencodeAnnotationRemark *el, FILE *f, char sep, char lastSep);
/* Print out wgEncodeGencodeAnnotationRemark.  Separate fields with sep. Follow last field with lastSep. */

#define wgEncodeGencodeAnnotationRemarkTabOut(el,f) wgEncodeGencodeAnnotationRemarkOutput(el,f,'\t','\n');
/* Print out wgEncodeGencodeAnnotationRemark as a line in a tab-separated file. */

#define wgEncodeGencodeAnnotationRemarkCommaOut(el,f) wgEncodeGencodeAnnotationRemarkOutput(el,f,',',',');
/* Print out wgEncodeGencodeAnnotationRemark as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* WGENCODEGENCODEANNOTATIONREMARK_H */

